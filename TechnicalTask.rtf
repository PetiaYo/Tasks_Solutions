{\rtf1\ansi\ansicpg1251\deff0\nouicompat\deflang1026{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Liberation Serif;}{\f2\fnil\fcharset204 Calibri;}{\f3\fnil Calibri;}{\f4\fnil\fcharset0 Courier New;}{\f5\fnil\fcharset2 Symbol;}}
{\colortbl ;\red51\green51\blue51;\red0\green0\blue0;\red255\green255\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\hyphpar0\sa200\sl276\slmult1\b\f0\fs22\lang9 1.What is Kafka? How it works? Which are the main advantages/benefits of using Kafka?\b0\f1\fs24\par
\f0\fs22 Kafka is an open-source distributed event streaming platform- \f2\lang1026\'e0 message broker.\f1\fs24\par
\f0\fs22\lang9  Each event that occurs in the application can be published to the dedicated Kafka topic. User clicks, registrations, likes, time spent on certain pages by users, orders - all these events can be sent to Kafka\rquote s topics. Then, other applications (consumers) can subscribe to topics and process the received data for different purposes including monitoring, analysis, reports, newsfeeds, personalization, and so on. \f1\fs24\par
\f0\fs22 Advantages of Apache Kafka:\f1\fs24\par
\f0\fs22 1. Real-time data processing - it is able to transmit data from producers to data handlers and then to data storages\f1\fs24\par
\f0\fs22 2. Application activity tracking \f1\fs24\par
\f0\fs22 3. Logging and monitoring system\f1\fs24\par
\f0\fs22 4. Low Latency - data record written to Kafka may be retrieved quickly by the consumer.\~ \par
5. High Throughput \f3\endash\f0  can handle a lot of messages of high volume and high velocity supporting thousands of messages in a second.\fs24\par
\fs22 6. Durability - offers the replication feature, which makes data or messages to persist more on the cluster over a disk\f1\fs24\par
\f0\fs22 7. Scalability - highly scalable, can handle large amount of messages \par
8. Distributed System - Apache Kafka contains a distributed architecture which makes it scalable. Partitioning and replication are the two capabilities under the distributed system.\f1\fs24\par
\f0\fs22 Disadvantages Of Apache Kafka:\f1\fs24\par
\f0\fs22 1. Kafka is not designed to be a task queue\f1\fs24\par
\f0\fs22 2. Kafka is overkill when you need to process only a small number of messages per day\f1\fs24\par
\f0\fs22 3. It is not easy to perform data transformations on-the-fly. You need to build a complex pipeline of interactions between producers and consumers and then maintain the entire system.\f1\fs24\par
\f0\fs22 4. Kafka is not good for long-term storage. It supports saving data during a specified retention period, but generally it should not be very long. \f1\fs24\par
\f0\fs22\par
\par
\b\par
1.1. Write down testing strategy for an application that uses kafka, describe how the \b0\f1\fs24\par
\b\f0\fs22 testing will be organized and provide 1 test case as an example.\b0\f1\fs24\par
\b\f0\fs22 Test strategy for taxi booking application\b0\f1\fs24\par
\cf1\b\f0\fs22 Document purpose\cf0\b0\f1\fs24\par
\f0\fs22 The purpose of this document is to outline the high- level test strategy for the project, defining the preliminary test scope, high-level test activities, and organization, together with test management for the project. The test strategy provides the framework for estimating the duration and cost of the testing effort at the required confidence level for the business case.\f1\fs24\par

\pard\hyphpar0\ri520\sl240\slmult1\f0\fs22 This test strategy is a planning tool that will provide the starting point for detailed test planning during the Execute stage.\f1\fs24\par

\pard\hyphpar0\li80\ri520\sl240\slmult1\f0\fs22\par

\pard\hyphpar0\sl240\slmult1\b Objectives\b0\f1\fs24\par
\f0\fs22 The key objectives are as follows:\f1\fs24\par
\f0\fs22 Determine the significance of the application system to the business.\f1\fs24\par
\f0\fs22 Determine the types of tests required by each testing task.\f1\fs24\par
\f0\fs22 Identify the need for converted data from legacy systems or other sources.\f1\fs24\par
\f0\fs22 Determine the need for integration testing by identifying key system interfaces.\f1\fs24\par
\f0\fs22 Identify performance requirements.\f1\fs24\par
\f0\fs22\par
Deliverable Audience\f1\fs24\par
\f0\fs22 The Testing Strategy is intended for the following audience:\f1\fs24\par
\f0\fs22 Developers, analysts, designers, testers, interface teams, operations and other team members that may be involved in the system integration testing.\f1\fs24\par

\pard\hyphpar0\sa200\sl276\slmult1\b\f0\fs22\par
Overview\b0\f1\fs24\par
\b\f0\fs22 Creating a new Application which is taxi booking app. Test the functionalities of booking, and payments and make sure it gives value to the customer. The most important requirements are:\b0\f1\fs24\par
\f0\fs22 1. Security of Customer/Driver Data\f1\fs24\par
\f0\fs22 2. Integrated Payment and Wallets\f1\fs24\par
\f0\fs22 3. Easy to Use UI\f1\fs24\par
\f0\fs22 4. Accuracy of data\f1\fs24\par
\b\f0\fs22\par
\par
\par
Scope and test approach\b0\f1\fs24\par

\pard\hyphpar0\sl240\slmult1\b\f0\fs22 Scope\b0\f1\fs24\par
\f0\fs22 To define the testing scope of application the following areas were examined:\f1\fs24\par
\f0\fs22 - testing levels\f1\fs24\par
\f0\fs22 - test types by task\f1\fs24\par
\f0\fs22 - data sources\f1\fs24\par
\f0\fs22 - system interfaces\f1\fs24\par
\f0\fs22 - testing environments\f1\fs24\par
\f0\fs22 - testing tools\f1\fs24\par
\f0\fs22\par
\b Testing Levels\b0\f1\fs24\par
\f0\fs22 This project includes the following testing tasks:\f1\fs24\par
\f0\fs22 - unit test\f1\fs24\par
\f0\fs22 - unit integration test\f1\fs24\par
\f0\fs22 - module test\f1\fs24\par
\f0\fs22 - module integration test\f1\fs24\par
\f0\fs22 - system test\f1\fs24\par
\f0\fs22 - systems integration test\f1\fs24\par
\f0\fs22 - acceptance test\f1\fs24\par
\f0\fs22\par
\b Test Types by Task\b0\f1\fs24\par
\f0\fs22 Types of testing that will be conducted:\f1\fs24\par
\f0\fs22\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li720\sl240\slmult1\b Unit/Module Test\b0\f1\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li1080\sl240\slmult1\f0\fs22 system process step\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 validation\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 error handling\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 database auditing\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 security\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 volume data\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 checkpoint restart\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 user interface\tab\f1\fs24\par

\pard\hyphpar0\sl240\slmult1\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li720\sl240\slmult1\b\f0\fs22 Unit/Module Integration Test\b0\f1\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li1080\sl240\slmult1\f0\fs22 system process script\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 security\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 volume data\f1\fs24\par

\pard\hyphpar0\li1080\sl240\slmult1\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li720\sl240\slmult1\b\f0\fs22 System Test\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li1080\sl240\slmult1\b0 initial system documentation\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 manual data load\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 system process sequence using scripted data\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 interface using scripted data\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 converted data load\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 converted data inspection\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 system process sequence using converted data\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 interface using converted data\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 parallel legacy reconciliation\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 job stream\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 backup and recovery\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 database auditing\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 data archival\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 security\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 locking\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 batch response time\f1\fs24\par
{\pntext\f5\'B7\tab}\f0\fs22 online response time\f1\fs24\par

\pard\hyphpar0\sl240\slmult1\f0\fs22\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li720\sl240\slmult1\b Systems Integration Test\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li1080\sl240\slmult1\b0 systems integration process sequence using converted data\par
{\pntext\f5\'B7\tab}network stress\par
{\pntext\f5\'B7\tab}security\par
{\pntext\f5\'B7\tab}locking\par
{\pntext\f5\'B7\tab}batch response time\par
{\pntext\f5\'B7\tab}online response time\par

\pard\hyphpar0\sl240\slmult1\f1\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li720\sl240\slmult1\b\f0\fs22 Acceptance Test\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\hyphpar0\fi-360\li1080\sl240\slmult1\b0 batch response time\par
{\pntext\f5\'B7\tab}online response time\par
{\pntext\f5\'B7\tab}parallel running\par
{\pntext\f5\'B7\tab}live data\par
{\pntext\f5\'B7\tab}live environment\par
{\pntext\f5\'B7\tab}final system documentation sign-off\par

\pard\hyphpar0\sl240\slmult1\par
\b Converted Data Sources\b0\f1\fs24\par
\f0\fs22 The following table identifies legacy or other sources of converted data that will be used for testing:                 \f1\fs24\par
\f0\fs22\par
\trowd\trgaph108\trleft137\trrh1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx3256\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx6374 
\pard\intbl\hyphpar0\sl240\slmult1 Legacy System or Source Name\cell Description of Converted Data\cell\row\trowd\trgaph108\trleft137\trrh1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx3256\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx6374 
\pard\intbl\hyphpar0\sl240\slmult1\cell\cell\row 
\pard\hyphpar0\sl240\slmult1\par
System Interfaces\f1\fs24\par
\f0\fs22 The following table identifies key system interfaces that will be included in the testing:\f1\fs24\par
\f0\fs22            \f1\fs24\par
\trowd\trgaph108\trleft108\trrh1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx1583\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx3166\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx4749\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx6332\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx7916\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx9180 
\pard\intbl\hyphpar0\sl240\slmult1\f0\fs22 System\cell Interface\cell Name\cell Type\cell Input\cell Output           \cell\row\trowd\trgaph108\trleft108\trrh1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx1583\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx3166\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx4749\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx6332\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx7916\clcfpat2\clcbpat3\clbrdrl\brdrw8\brdrs\brdrcf2\clbrdrt\brdrw8\brdrs\brdrcf2\clbrdrr\brdrw8\brdrs\brdrcf2\clbrdrb\brdrw8\brdrs\brdrcf2 \cellx9180 
\pard\intbl\hyphpar0\sl240\slmult1\cell\cell\cell\cell\cell\cell\row 
\pard\hyphpar0\sl240\slmult1\par
\b Roles and responsibilities\b0\f1\fs24\par
\f0\fs22 There will be 4 teams of 3 developers and 2 QAs. Every QA have to write test suites with test cases and would be responsible for the execution of the tests. A test report must be given to the Product Manager at the end of every week.\f1\fs24\par
\f0\fs22\par
\b Testing Environments\b0\f1\fs24\par
\f0\fs22 Develop - Test \f3\endash\f0  Integration - Staging \fs24\par
\fs22\par
\b Environment requirements:\b0\f1\fs24\par
\b\f0\fs22 Android 10, 11, 12, iOS 14.6, 15.1, 15.2, Windows OS, Firefox, Chrome, Edge\b0\f1\fs24\par
\f0\fs22\par
\b Testing Tools\b0\f1\fs24\par
\f0\fs22 Jira, Bugzilla, Selenium, Postman, Cucumber, JMeter\fs24\par
\fs22\par
\b Time\b0\f1\fs24\par
\f0\fs22 Testing tasks will be constrained by time, affecting the following activities: there will be 2 weeks sprints with the release every month \f1\fs24\par
\f0\fs22\par
\b Required System Resources\b0\f1\fs24\par
\f0\fs22 The testing effort is restricted by the availability of the following system resources:\f1\fs24\par
\f0\fs22 4 Servers:\fs24\par
\fs22 - 8 CPU cores\fs24\par
\fs22 - 32 GB Memory \fs24\par
\fs22 - 2 TB Disk space\fs24\par
\fs22\par
\b Business\b0\f1\fs24\par
\f0\fs22 The testing effort is restricted by the following business policies:...\f1\fs24\par
\f0\fs22\par
\b Technical\b0\f1\fs24\par
\f0\fs22 The testing effort is restricted by the following technical constraints:...\fs24\par
\f4\fs22\par
\b\f0 Key Inputs\b0\f1\fs24\par
\f0\fs22 Key inputs to the testing are following:\f1\fs24\par
\f0\fs22 System Process Model\f1\fs24\par
\f0\fs22 System Function Model\f1\fs24\par
\f0\fs22 System Data Model\f1\fs24\par
\f0\fs22 Existing System Interfaces\f1\fs24\par
\f0\fs22 System Interfaces Requirements\f1\fs24\par
\f0\fs22 Detailed System Interfaces Requirements\f1\fs24\par
\f0\fs22 User Interface Style Definition\f1\fs24\par
\f0\fs22 Recovery and Fallback Strategy\f1\fs24\par
\f0\fs22 Database Object Authorization Scheme\f1\fs24\par
\f0\fs22 Module Process Model\f1\fs24\par
\f0\fs22 Menu Structure\f1\fs24\par
\f0\fs22 Module Functional Documentation\f1\fs24\par
\f0\fs22 Module Technical Documentation\f1\fs24\par
\f0\fs22 Installation Plan\f1\fs24\par
\f0\fs22 System Operations Guide\f1\fs24\par
\f0\fs22 User Reference Manual\f1\fs24\par
\f0\fs22 User Guide\f1\fs24\par
\f0\fs22 Technical Reference Manual\f1\fs24\par
\f0\fs22 Runtime Online Help\f1\fs24\par
\f0\fs22 Business Analysts\f1\fs24\par
\f0\fs22 Operations\f1\fs24\par
\b\f0\fs22\par
Acceptance Criteria\b0\f1\fs24\par
\f0\fs22 This acceptance criteria for the testing task deliverables will be measured by the completion and sign-off of each deliverable which has been listed. Deliverables for test scripts and test results will be subject to quality reviews.\f1\fs24\par
\f0\fs22\par
\b Problem Management\b0\f1\fs24\par
\f0\fs22 The assessment and prioritization of defects found during testing will be strictly controlled using the Problem Management process described in the Master Project Plan.  \f1\fs24\par
\b\f0\fs22\par
Critical Success Factors\b0\f1\fs24\par
\f0\fs22 In addition to the overall critical success factors, the following critical success factors are specific to the Testing process:\f1\fs24\par
\f0\fs22 Testing considerations must begin in the early phases of the project.\f1\fs24\par
\f0\fs22 Test script development must be based on key project deliverables.\f1\fs24\par
\f0\fs22 Testing must be objective and must be performed by an independent test team (other than the programmers responsible for the application software).\f1\fs24\par
\f0\fs22 The problem management process must be functional as soon as testing begins, and must ensure that only valid and non-duplicated defects are processed.\f1\fs24\par
\f0\fs22 Multiple iterations for each testing task should be planned to allow for a higher density of testing for the current test iteration and scheduled fixes for the next iteration.\f1\fs24\par
\f0\fs22 Planning for the systems integration test should start early, as it will involve multiple projects, systems, and organizations.\f1\fs24\par
\f0\fs22 The scope of the regression test should be well defined.\f1\fs24\par
\f0\fs22 An automated tool should be used to perform regression testing.\f1\fs24\par
\f0\fs22 Locking, response time, and stress testing should use process-based testing scripts.\f1\fs24\par
\f0\fs22 Modules should be categorized by their relative importance to the business for defect prioritization and performance testing.\f1\fs24\par
\f0\fs22\par
\b Risk and Contingency Plans\b0\f1\fs24\par
\f0\fs22 Identified testing risks and their associated contingency plans include the following:\f1\fs24\par
\f0\fs22 ID, Risk, Description, Probability, Impact, Mitigation Plan   \par
    \f1\fs24\par
\b\f0\fs22 Metrics\b0\f1\fs24\par
\f0\fs22 Key testing metrics are as follows:\f1\fs24\par
\f0\fs22 number of test iterations planned for each test task\f1\fs24\par
\f0\fs22 relative importance of the application system to the business\f1\fs24\par
\f0\fs22 complexity of the application system under test\f1\fs24\par
\f0\fs22 number of functional areas involved in the module and module integration test\f1\fs24\par
\f0\fs22 number of system processes\f1\fs24\par
\f0\fs22 number of scenarios per system process\f1\fs24\par
\f0\fs22 number of test steps per scenario\f1\fs24\par
\f0\fs22 complexity of the module under test\f1\fs24\par
\f0\fs22 complexity of the scenario under test\f1\fs24\par
\f0\fs22 number of other application systems in the systems integration test\f1\fs24\par
\f0\fs22 required online response time for critical modules\f1\fs24\par
\f0\fs22 batch nightly window response time\f1\fs24\par
\f0\fs22 number of end users required for the stress test\f1\fs24\par
\f0\fs22\par
\b Revision Log\b0\f1\fs24\par
\f0\fs22 Use date format \ldblquote yyyy-mm-dd\rdblquote . Versions are numbered. Draft versions begin with the number zero; e.g. the first draft is version 0.1, second draft, 0.2. The first approved draft is 1.0.\f1\fs24\par
\f0\fs22 Date Version Change Reference Author Reviewed by  [yyyy-mm-dd] 0.1                                   \f1\fs24\par
\f0\fs22\par
\b Appendices\b0\f1\fs24\par
\f0\fs22 Each Appendix must have:\f1\fs24\par
\f0\fs22 A separate header, numbered A-Z, with an appropriate descriptive title. Use the Heading TOC Style for each Appendix Header. This style will automatically insert a page break.\f1\fs24\par
\f0\fs22 A lead in paragraph that states the importance of the data to this report\f1\fs24\par
\f0\fs22 A closure, using the Heading TOC style, that repeats the header, such as End of Appendix A \f3\endash\f0  Title.\fs24\par
\fs22\par
\b 1.2. Test case\b0\f1\fs24\par

\pard\hyphpar0\sa200\sl276\slmult1\b\f0\fs22 Test case ID\b0 : 1\f1\fs24\par
\b\f0\fs22 Test title:\b0  Login in application with valid credentials \f1\fs24\par
\b\f0\fs22 Test designer: \b0 Petia Yonkova \f1\fs24\par
\b\f0\fs22 Test date: \b0 23.01.2022 \f1\fs24\par
\b\f0\fs22 Test executed by: \b0 Petia Yonkova \f1\fs24\par
\b\f0\fs22 Execution date: \b0 25.01.22\f1\fs24\par
\b\f0\fs22 Test priority: \b0 P1\f1\fs24\par
\b\f0\fs22 Test case description:  \b0 Login in Web browser with valid credentials \f3\endash\f0  phone number\fs24\par
\b\fs22 Environment: \b0 Test\par
\b Execution client:\b0  Chrome\f1\fs24\par
\b\f0\fs22 References:  \b0 link to login form specifications\f1\fs24\par
\b\f0\fs22 Related requirement:  \b0 to have registration in application\f1\fs24\par
\b\f0\fs22 Test steps:\b0\f1\fs24\par
\f0\fs22 Given user navigates to the login page\fs24\line\fs22 When enteres "Phone number" equal to "878 123456"\fs24\line\fs22 And presses "Next"\fs24\line\fs22 And enters \ldblquote Password\rdblquote  equal to \ldblquote\ul P@ssw)rd!\ulnone\rdblquote\fs24\line\fs22 Then home page is displayed\b\par
Expected results: Login successful, the user is on home page\b0\f1\fs24\par
\b\f0\fs22 Status: \b0 Pass\f1\fs24\par
\b\f0\fs22 Comments:  \b0 ....\f1\fs24\par
\b\f0\fs22\par
2. What is microservice architecture? Please write down your approach for testing microservices and what will be the scope of your testing?\b0\f1\fs24\par
\f0\fs22 Microservices help to build an application as a suite of small services, each running in its own process and independently deployable. These services may be written in different programming languages and may use different data storage techniques. This results in the development of systems that are scalable and flexible.\f1\fs24\par
\f0\fs22 Unit testing - individual units or components of a software are tested\f1\fs24\par
\f0\fs22 Contract testing - checking each application in isolation to ensure the messages it sends or receives conform to a shared understanding that is documented in a "contract". Contract testing should regard every microservice as a black box and every one of the services must be called freely and their behavior must be checked. Any conditions of the service, enable the service to work yet don\rquote t collaborate with some other services. For applications that communicate via HTTP, these "messages" would be the HTTP request and response, and for an application that used queues, this would be the message that goes on the queue.\par
Functional Testing - API testing with Postman, executing different request for every endpoint verifying if the status is correct and response contains expected data\fs24\par
\fs22 Integration testing - Services calls must be made with joining to outer services, including blunder and achievement cases. Joining testing accordingly approves that the framework is cooperating consistently and that the conditions between the administrations are available.\f1\fs24\par
\f0\fs22 End to end testing \f3\endash\f0  Verifies use case-based scenarios using all services, including databases and other third-party systems\par
\par
\b 2.1. What will be your approach to ensure that tests can be re-run in future?\b0\f1\fs24\par
\f0\fs22 Every test should create necessary data during set up before every execution. It should cleanup the data created during setup and execution. Tests should be atomic and completely independent.\par
\f1\fs24\par
}
 